#ifndef TETROMINOS_H
#define TETROMINOS_H

#define BLOCK_TYPE_COUNT 8

#define PIECE_WIDTH 4
#define PIECE_HEIGHT 4

#define NUM_ROTATIONS 4

typedef enum {
	BLOCK_NONE,
	BLOCK_I,
	BLOCK_O,
	BLOCK_T,
	BLOCK_S,
	BLOCK_Z,
	BLOCK_J,
	BLOCK_L,
} BlockType;

typedef BlockType Shape[PIECE_WIDTH][PIECE_HEIGHT];

static const Shape piece_shape_empty = {
	{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}
};

static const Shape piece_shape_O[NUM_ROTATIONS] = {
	{{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_O,    BLOCK_O,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_O,    BLOCK_O,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_O,    BLOCK_O,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_O,    BLOCK_O,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_O,    BLOCK_O,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_O,    BLOCK_O,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_O,    BLOCK_O,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_O,    BLOCK_O,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},
};

static const Shape piece_shape_I[NUM_ROTATIONS] = {
	{{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_I,    BLOCK_I,    BLOCK_I,    BLOCK_I},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_NONE, BLOCK_I, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_I, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_I, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_I, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_I,    BLOCK_I,    BLOCK_I,    BLOCK_I},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_NONE, BLOCK_I, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_I, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_I, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_I, BLOCK_NONE}},
};

static const Shape piece_shape_T[NUM_ROTATIONS] = {
	{{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_T,    BLOCK_T,    BLOCK_T,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_T,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_T,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_T,    BLOCK_T,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_T,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_T,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_T,    BLOCK_T,    BLOCK_T,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_T,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_T,    BLOCK_T,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_T,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},
};

static const Shape piece_shape_S[NUM_ROTATIONS]	= {
	{{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_S,    BLOCK_S,    BLOCK_NONE},
	 {BLOCK_S,    BLOCK_S,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_S,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_S,    BLOCK_S,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_S,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_S,    BLOCK_S,    BLOCK_NONE},
	 {BLOCK_S,    BLOCK_S,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_S,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_S,    BLOCK_S,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_S,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},
};

static const Shape piece_shape_Z[NUM_ROTATIONS] = {
	{{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_Z,    BLOCK_Z,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_Z,    BLOCK_Z,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_NONE, BLOCK_Z,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_Z,    BLOCK_Z,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_Z,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_Z,    BLOCK_Z,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_Z,    BLOCK_Z,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_NONE, BLOCK_Z,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_Z,    BLOCK_Z,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_Z,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},
};

static const Shape piece_shape_J[NUM_ROTATIONS] = {
	{{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_J,    BLOCK_J,    BLOCK_J,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_J,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_J,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_J,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_J,    BLOCK_J,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_J,    BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_J,    BLOCK_J,    BLOCK_J,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_J,    BLOCK_J,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_J,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_J,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},
};

static const Shape piece_shape_L[NUM_ROTATIONS] = {
	{{BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_L,    BLOCK_L,    BLOCK_L,    BLOCK_NONE},
	 {BLOCK_L,    BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_L,    BLOCK_L,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_L,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_L,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_NONE, BLOCK_L,    BLOCK_NONE},
	 {BLOCK_L,    BLOCK_L,    BLOCK_L,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},

	{{BLOCK_NONE, BLOCK_L,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_L,    BLOCK_NONE, BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_L,    BLOCK_L,    BLOCK_NONE},
	 {BLOCK_NONE, BLOCK_NONE, BLOCK_NONE, BLOCK_NONE}},
};

#endif // TETROMINOS_H
